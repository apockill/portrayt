name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        os: [ubuntu-latest, ubuntu-20.04]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Ubuntu cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key:
            ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry install
      - name: Test
        shell: bash
        run: |
          poetry run pytest tests/ -s --cov=portrayt/ --cov-report=term-missing ${@-}
          poetry run coverage xml
      - name: Report Coverage
        if: matrix.os == 'ubuntu-20.04' && matrix.python-version == '3.8'
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
